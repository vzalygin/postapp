{"version":3,"sources":["service/user.js","service/posts.js","components/PostCard.jsx","components/Header.jsx","components/Feed.jsx","components/Post.jsx","components/UserProfile.jsx","components/NewPostForm.jsx","components/LoginForm.jsx","components/App.jsx","index.js"],"names":["user","login","name","isAuthorized","makeUser","users","getUserProfile","find","makePost","id","author","creationDate","title","content","answerTo","arguments","length","undefined","answeredFrom","liked","isDeleted","posts","getPostById","post","PostCard","_ref","state","setState","useState","like","setLike","value","setLikeOnPost","setDeleted","window","confirm","setDeletedOnPost","metaBlock","React","createElement","className","Link","to","concat","answerToBlock","answeredFromBlock","map","answer","likeButtonComponent","onClick","deleteButtonComponent","type","contentBlock","Fragment","role","aria-label","Header","postButton","profileDropdown","href","Feed","key","Post","useParams","UserProfile","userProfile","userPosts","filter","getPostsByAuthorLogin","meText","NewPostForm","_","useSearchParams","get","placeholder","readonly","Form","method","htmlFor","required","cols","rows","Navigate","replace","LoginForm","router","createBrowserRouter","path","element","action","async","request","formData","console","log","createPost","uuidv4","push","Date","toISOString","answered","redirect","errorElement","App","RouterProvider","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.59fd52c2.chunk.js","sourcesContent":["let user = {\n    login: \"vzalygin\",\n    name: \"Vyacheslav Zalygin\",\n};\n// let user = null;\n\nconst isAuthorized = () => {\n    return user !== null;\n};\n\nconst makeUser = (login, name) => {\n    return { login: login, name: name }\n};\n\nconst logIn = (login, name) => {\n    user = makeUser(login, name)\n};\n\nconst logOut = () => {\n    user = null;\n};\n\nconst users = [\n   makeUser(\"vzalygin\", \"Vyacheslav Zalygin\"),\n   makeUser(\"johndoe\", \"John Doe\") \n]\n\nconst getUserProfile = (login) => {\n    return users.find(user => user.login === login);\n};\n\nexport { user, users, getUserProfile, isAuthorized, makeUser, logIn, logOut };","import {\n    user, makeUser, getUserProfile\n} from \"./user\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst makePost = (id, author, creationDate, title, content, answerTo=null, answeredFrom=[], liked=false, isDeleted=false) => {\n    return {\n        id: id,\n        author: author,\n        creationDate: creationDate,\n        title: title,\n        content: content,\n        answerTo: answerTo,\n        answeredFrom: answeredFrom,\n        liked: liked,\n        isDeleted: isDeleted\n    }\n};\n\nexport const posts = [\n    makePost(\n        \"9165c789-bb94-414a-9666-2bf15f31bece\", \n        getUserProfile(\"vzalygin\"), \n        \"2023-12-12\", \n        \"Lorem Ipsum\", \n        `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris efficitur felis a dapibus consectetur. Proin ultricies, urna non pulvinar sagittis, turpis risus dictum lorem, ac scelerisque tortor erat a eros. Donec sit amet ligula justo. Integer nec lectus in justo luctus faucibus ut vel enim. Nunc ligula augue, facilisis vitae nisl a, sagittis hendrerit nisl. Pellentesque sed ante non sem scelerisque elementum. Nulla semper velit a libero feugiat feugiat. Morbi ullamcorper velit eros, scelerisque sagittis massa maximus ac. Ut dictum nibh ut lacus vulputate tempus. Nullam augue tortor, viverra quis molestie a, finibus a nibh.`, \n        null,\n        [\"e2cdad6d-ccba-464d-bbcc-88dd4c5d4293\", \"e2cdad1d-ccba-464d-bbcc-88dd4c5d4293\", \"e2cdad3d-ccba-464d-bbcc-88dd4c5d4293\"],\n        false, \n        false\n    ),\n    makePost(\n        \"e2cdad6d-ccba-464d-bbcc-88dd4c5d4293\", \n        makeUser(\"johndoe\", \"John Doe\"), \n        \"2024-12-13\", \n        \"Answer to \\\"Lorem Ipsum\\\"\", \n        `Donec ullamcorper porta ipsum, eu condimentum lectus. Mauris at mi et nunc gravida pulvinar eu ac turpis. Praesent quis viverra sem. Nulla vel velit vestibulum, consectetur dolor sit amet, accumsan metus. Aenean efficitur lacus a lacus condimentum, nec pellentesque purus fermentum. Morbi aliquam accumsan urna, vel hendrerit neque volutpat ac. In hac habitasse platea dictumst. Fusce elementum enim at nisl mattis luctus. `, \n        \"9165c789-bb94-414a-9666-2bf15f31bece\",\n        [],\n        true, \n        false\n    ),\n    makePost(\n        \"e2cdad1d-ccba-464d-bbcc-88dd4c5d4293\", \n        makeUser(\"johndoe\", \"John Doe\"), \n        \"2024-12-13\", \n        \"Answer to \\\"Lorem Ipsum\\\"\", \n        `Donec ullamcorper porta ipsum, eu condimentum lectus. Mauris at mi et nunc gravida pulvinar eu ac turpis. Praesent quis viverra sem. Nulla vel velit vestibulum, consectetur dolor sit amet, accumsan metus. Aenean efficitur lacus a lacus condimentum, nec pellentesque purus fermentum. Morbi aliquam accumsan urna, vel hendrerit neque volutpat ac. In hac habitasse platea dictumst. Fusce elementum enim at nisl mattis luctus. `, \n        \"9165c789-bb94-414a-9666-2bf15f31bece\",\n        [],\n        false, \n        true\n    ),\n    makePost(\n        \"e2cdad3d-ccba-464d-bbcc-88dd4c5d4293\", \n        makeUser(\"johndoe\", \"John Doe\"), \n        \"2024-12-13\", \n        \"Answer to \\\"Lorem Ipsum\\\"\", \n        `Donec ullamcorper porta ipsum, eu condimentum lectus. Mauris at mi et nunc gravida pulvinar eu ac turpis. Praesent quis viverra sem. Nulla vel velit vestibulum, consectetur dolor sit amet, accumsan metus. Aenean efficitur lacus a lacus condimentum, nec pellentesque purus fermentum. Morbi aliquam accumsan urna, vel hendrerit neque volutpat ac. In hac habitasse platea dictumst. Fusce elementum enim at nisl mattis luctus. `, \n        \"9165c789-bb94-414a-9666-2bf15f31bece\",\n        [],\n        true, \n        false\n    )\n];\n\n\nexport const getPostById = (id) => {\n    return posts.find(post => post.id === id)\n}\n\nexport const setLikeOnPost = (id, value) => {\n    getPostById(id).liked = value\n};\n\nexport const setDeletedOnPost = (id) => {\n    getPostById(id).isDeleted = true;\n}\n\nexport const createPost = (author, title, content, answerTo) => {\n    const id = uuidv4() \n    posts.push(makePost(\n        id, author, new Date().toISOString(), title, content, answerTo, [], false, false\n    ));\n    const answered = posts.find(post => post.id === answerTo);\n    if (answered !== undefined) {\n        answered.answeredFrom.push(id)\n    }\n};\n\nexport const getPostsByAuthorLogin = (login) => {\n    return posts.filter(post => post.author.login === login);\n}","import React, { useState } from 'react';\nimport { user, isAuthorized } from '../service/user';\nimport { Link } from 'react-router-dom';\nimport { setLikeOnPost, setDeletedOnPost } from '../service/posts';\n\nconst PostCard = ({id, author, creationDate, title, content, answerTo, answeredFrom, liked, isDeleted}) => {\n    const [state, setState] = useState({like: liked, isDeleted: isDeleted });\n    const setLike = () => {\n        const value = { like: !(state.like), isDeleted: state.isDeleted};\n        setLikeOnPost(id, value.like);\n        setState(value)\n    };\n    const setDeleted = () => {\n        if (window.confirm(\"Вы уверены, что хотите удалить пост?\")) {\n            const value = { like: state.like, isDeleted: true };\n            setDeletedOnPost(id);\n            setState(value);\n        }\n    }\n\n    const metaBlock =(\n        <div className=\"container-fluid hor\">\n            <h6 className=\"font-weight-light row-links\">{creationDate}</h6>\n            <Link to={`/post/${id}`} className=\"btn btn-small font-weight-light post-link\">{id}</Link>\n            <Link to={`/${author.login}`} className=\"btn btn-link btn-sm\">\n                @{author.name} {(() => {if(isAuthorized() && author.login === user.login){return\"(me)\";}else{return;}})()}\n            </Link>\n        </div>\n    );\n    \n    const answerToBlock = (()=>{if(answerTo !== null)\n        return <Link to={`/post/${answerTo}`} className=\"btn btn-small font-weight-light post-link\" >&lt;= {answerTo}</Link>;\n    })();\n\n    const answeredFromBlock = \n        <div>\n            {answeredFrom.map(answer => {\n                return <Link to={`/post/${answer}`} className=\"btn btn-sm font-weight-light post-link\">=&gt; {answer}</Link>;\n            })}\n        </div>;\n\n    const likeButtonComponent = (()=>{\n        if(state.like===true){\n            return <button className=\"btn btn-liked\" onClick={setLike} >♥</button>\n        } else {\n            return <button className=\"btn btn-light\" onClick={setLike}>♥</button>;\n        }\n    })();\n\n    const deleteButtonComponent = (()=>{if(isAuthorized() && author.login === user.login) {\n        return <button type=\"button\" className=\"btn btn-outline-danger\" onClick={setDeleted}>🗑️</button>;\n    }})();\n\n    const contentBlock = (()=>{if(state.isDeleted === false) {\n            return <React.Fragment>\n                        <h5 className=\"card-title\">{title}</h5>\n                        <p className=\"card-text\">{content}</p>\n                        <div className=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n                            {likeButtonComponent}\n                            <Link to={`/post/new?answerTo=${id}`} type=\"button\" className=\"btn btn-light\">↪️</Link>\n                            {deleteButtonComponent}\n                        </div>\n                    </React.Fragment>\n        } else {\n            return <h5 className=\"card-title\">Пост был удален.</h5>\n    }})();\n\n    return (\n        <div className=\"card w-50 post-card\">\n            <div className=\"card-body\">\n                {metaBlock}\n                {answerToBlock}\n                {answeredFromBlock}\n                {contentBlock}\n            </div>\n        </div>\n    )\n};\n\nexport default PostCard;","import React from 'react';\nimport {\n    user,\n    isAuthorized,\n} from \"../service/user\";\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    const postButton = (() => {\n        if (isAuthorized()) {\n            return <Link to={\"/post/new\"} className=\"btn btn-primary my-2 my-lg-0\">Написать пост</Link>\n        } else {\n            return <Link to={\"/login\"} className=\"btn btn-primary my-2 my-lg-0\">Написать пост (Авторизация)</Link>\n        }\n    })()\n\n    const profileDropdown = (() => {\n        if (isAuthorized()) {\n            return (\n                <React.Fragment>\n                    <Link to={`/${user.login}`} className=\"btn btn-link\">{user.name}</Link>\n                    <button className=\"btn btn-outline-danger\">Выйти</button>\n                </React.Fragment>\n            )\n        } else {\n            return <Link to={\"/login\"} className=\"btn btn-primary\" href=\"/login\">Авторизоваться</Link>\n        }\n    })()\n\n    return (\n        <nav className=\"navbar fixed-top navbar-self navbar-expand-lg navbar-dark bg-dark\">\n            <Link to={\"/feed\"} className=\"navbar-brand\">Posting app</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    {profileDropdown}\n                </ul>\n            </div>\n            {postButton} \n        </nav>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport PostCard from \"./PostCard\";\nimport { posts } from \"../service/posts\";\nimport Header from './Header';\n\nconst Feed = () => {\n    return (\n        <React.Fragment>\n            <Header/>\n            <main className=\"container\">\n                {posts.map(post => {\n                    return <PostCard key={post.id}\n                        id={post.id}\n                        author={post.author}\n                        creationDate={post.creationDate}\n                        title={post.title}\n                        content={post.content}\n                        answerTo={post.answerTo}\n                        answeredFrom={post.answeredFrom}\n                        liked={post.liked}\n                        isDeleted={post.isDeleted}\n                    />;\n                })}\n            </main>\n        </React.Fragment>\n    );\n};\n\nexport default Feed;","import React from 'react';\nimport PostCard from './PostCard';\nimport { getPostById } from '../service/posts';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\n\nconst Post = () => {\n    const { id } = useParams();\n    const post = getPostById(id);\n    return (\n        <React.Fragment>\n            <Header/>\n            <main className='container'>\n                <PostCard\n                    id={post.id}\n                    author={post.author}\n                    creationDate={post.creationDate}\n                    title={post.title}\n                    content={post.content}\n                    answerTo={post.answerTo}\n                    answeredFrom={post.answeredFrom}\n                    liked={post.liked}\n                    isDeleted={post.isDeleted}\n                />\n            </main>            \n        </React.Fragment>\n\n    )\n};\n\nexport default Post;","import React, { Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\nimport { user, getUserProfile, isAuthorized } from '../service/user';\nimport { getPostsByAuthorLogin } from '../service/posts';\nimport PostCard from './PostCard';\n\nconst UserProfile = () => {\n    const { login } = useParams();\n    const userProfile = getUserProfile(login);\n    const userPosts = getPostsByAuthorLogin(login);\n\n    const meText = (()=>{\n        if(isAuthorized() && login === user.login) return \"(me)\";\n    })();\n    return (\n        <Fragment>\n            <Header/>\n            <main className=\"container\">\n                <div className=\"card w-50 post-card\">\n                    <div className=\"card-body\">\n                        <div className=\"hor\">\n                            <h5 className=\"card-title\">{userProfile.name} {meText}&emsp;&emsp;</h5>\n                            <span className='font-weight-light'>@{userProfile.login}</span>\n                        </div>\n                    </div>\n                </div>\n                {userPosts.map(post => <PostCard key={post.id}\n                    id={post.id}\n                    author={post.author}\n                    creationDate={post.creationDate}\n                    title={post.title}\n                    content={post.content}\n                    answerTo={post.answerTo}\n                    answeredFrom={post.answeredFrom}\n                    liked={post.liked}\n                    isDeleted={post.isDeleted}\n                />)}\n            </main>\n        </Fragment>\n    );\n}\n\nexport default UserProfile;","import React from \"react\";\nimport { isAuthorized } from \"../service/user\";\nimport { Navigate, redirect, useSearchParams, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport { Form } from 'react-router-dom';\nimport { createPost } from \"../service/posts\";\nimport { user } from \"../service/user\";\n\nexport const action = async ({ request }) => {\n    const formData = await request.formData()\n    const title = formData.get(\"title\");\n    const content = formData.get(\"text\");\n    const answerTo = formData.get(\"answerTo\");\n    console.log(formData)\n    createPost(user, title, content, answerTo)\n    return redirect(\"/feed\");\n};\n\nconst NewPostForm = () => {\n    const [state, _] = useSearchParams()\n    if (isAuthorized()) {\n        let answerTo = null;\n        if (state.get(\"answerTo\") !== null) {\n            answerTo = \n            <div className=\"form-group\">\n                <label>Ответ на: </label>\n                <input name=\"answerTo\" type=\"text\" className=\"form-control\" id=\"answerToId\" placeholder=\"id\" value={state.get(\"answerTo\")} readonly=\"readonly\"/>\n            </div>\n        }\n\n        return (\n            <React.Fragment>\n                <Header/>\n                <main className=\"container\">\n                    <Form className=\"card w-50 post-card\" method=\"post\">\n                        {answerTo}\n                        <div className=\"form-group\">\n                            <h4 htmlFor=\"postTitle\">Новый пост!</h4>\n                            <input name=\"title1\" type=\"text\" className=\"form-control\" id=\"postTitle\" placeholder=\"Название поста\" required/>\n                            <div className=\"valid-feedback\">\n                                Looks good!\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea name=\"text\" className=\"form-control\" cols=\"40\" rows=\"5\" id=\"postText\" placeholder=\"Текст поста\"></textarea>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Создать пост</button>\n                    </Form>\n                </main>\n            </React.Fragment>\n        )\n    } else {\n        return <Navigate to=\"/login\" replace={true} />\n    }\n};\n\nexport default NewPostForm;","import React from 'react';\nimport Header from './Header';\n\nconst LoginForm = () => {\n    return (<h1>ХУЙ</h1>\n        // <React.Fragment>\n        //     <Header/>\n        //     <main className='container'>\n        //     <form>\n        //         <div class=\"form-row align-items-center\">\n        //             <div class=\"col-auto\">\n        //             <label class=\"sr-only\" for=\"inlineFormInput\">Name</label>\n        //             <input type=\"text\" class=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Jane Doe\">\n        //             </div>\n        //             <div class=\"col-auto\">\n        //             <label class=\"sr-only\" for=\"inlineFormInputGroup\">Username</label>\n        //             <div class=\"input-group mb-2\">\n        //                 <div class=\"input-group-prepend\">\n        //                 <div class=\"input-group-text\">@</div>\n        //                 </div>\n        //                 <input type=\"text\" class=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Username\">\n        //             </div>\n        //             </div>\n        //             <div class=\"col-auto\">\n        //             <div class=\"form-check mb-2\">\n        //                 <input class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck\">\n        //                 <label class=\"form-check-label\" for=\"autoSizingCheck\">\n        //                 Remember me\n        //                 </label>\n        //             </div>\n        //             </div>\n        //             <div class=\"col-auto\">\n        //             <button type=\"submit\" class=\"btn btn-primary mb-2\">Submit</button>\n        //             </div>\n        //         </div>\n        //         </form>\n        //     </main>\n        // </React.Fragment>\n    );\n};\n\nexport default LoginForm;","import Feed from \"./Feed\";\nimport Post from \"./Post\";\nimport {\n  createBrowserRouter,\n  Navigate,\n  RouterProvider,\n} from \"react-router-dom\";\nimport * as React from 'react';\nimport UserProfile from \"./UserProfile\";\nimport NewPostForm from \"./NewPostForm\";\nimport LoginForm from \"./LoginForm\";\nimport { action as newPostAction } from \"./NewPostForm\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/feed\",\n    element: <Feed />,\n  },\n  {\n    path: \"/post/:id\",\n    element: <Post />\n  },\n  {\n    path: \"/post/new?\",\n    action: newPostAction,\n    element: <NewPostForm />\n  },\n  {\n    path: \"/login\",\n    element: <LoginForm />\n  },\n  {\n    path: \"/:login\",\n    element: <UserProfile/>,\n    errorElement: <Navigate to=\"/feed\" replace={true} />\n  },\n  {\n    path: \"/\",\n    element: <Navigate to=\"/feed\" replace={true} />\n  }\n]);\n\nconst App = () => {\n  return (\n    <React.Fragment>\n        <RouterProvider router={router} />\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}
{"version":3,"sources":["service/user.js","service/posts.js","components/PostCard.jsx","components/Header.jsx","components/Feed.jsx","components/Post.jsx","components/UserProfile.jsx","components/NewPostForm.jsx","components/LoginForm.jsx","components/SignupForm.jsx","components/App.jsx","index.js"],"names":["makeUser","login","name","users","getUserProfile","find","user","isAuthorized","context","_","AuthContext","createContext","makePost","id","author","creationDate","title","content","answerTo","arguments","length","undefined","answeredFrom","liked","isDeleted","posts","getPostById","post","PostCard","_ref","authContext","useContext","state","setState","useState","like","setLike","value","setLikeOnPost","setDeleted","window","confirm","setDeletedOnPost","metaBlock","React","createElement","className","Link","to","concat","answerToBlock","answeredFromBlock","map","answer","likeButtonComponent","onClick","deleteButtonComponent","type","contentBlock","Fragment","role","aria-label","Header","setUser","logout","console","log","postButton","profileDropdown","href","Feed","key","Post","useParams","UserProfile","userProfile","Navigate","userPosts","filter","getPostsByAuthorLogin","meText","kostyl","NewPostForm","params","useSearchParams","get","placeholder","readonly","Form","method","htmlFor","required","cols","rows","replace","LoginForm","password","SignupForm","router","createBrowserRouter","path","element","action","async","request","formData","createPost","uuidv4","push","Date","toISOString","answered","redirect","profile","alert","match","errorElement","App","Provider","RouterProvider","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.89d2bd32.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\n// Data source\nexport const makeUser = (login, name) => {\n    return { login: login, name: name };;\n};\n\nexport const users = [\n    makeUser(\"vzalygin\", \"Vyacheslav Zalygin\"),\n    makeUser(\"johndoe\", \"John Doe\") \n];\n \n export const getUserProfile = (login) => {\n     return users.find(user => user.login === login);\n };\n\n // Auth\nexport const isAuthorized = (context) => {\n    const { user, _  } = context;\n    return user !== null;\n};\n\nexport const logIn = (context, login, name) => {\n    const { _, setUser  } = context;\n    setUser(makeUser(login, name))\n};\n\nexport const logOut = (context) => {\n    const { _, setUser  } = context;\n    setUser(null);\n};\n\nexport const AuthContext = createContext(null);","import {\n    user, makeUser, getUserProfile\n} from \"./user\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst makePost = (id, author, creationDate, title, content, answerTo=null, answeredFrom=[], liked=false, isDeleted=false) => {\n    return {\n        id: id,\n        author: author,\n        creationDate: creationDate,\n        title: title,\n        content: content,\n        answerTo: answerTo,\n        answeredFrom: answeredFrom,\n        liked: liked,\n        isDeleted: isDeleted\n    }\n};\n\nexport const posts = [\n    makePost(\n        \"9165c789-bb94-414a-9666-2bf15f31bece\", \n        getUserProfile(\"vzalygin\"), \n        \"2023-12-12\", \n        \"Lorem Ipsum\", \n        `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris efficitur felis a dapibus consectetur. Proin ultricies, urna non pulvinar sagittis, turpis risus dictum lorem, ac scelerisque tortor erat a eros. Donec sit amet ligula justo. Integer nec lectus in justo luctus faucibus ut vel enim. Nunc ligula augue, facilisis vitae nisl a, sagittis hendrerit nisl. Pellentesque sed ante non sem scelerisque elementum. Nulla semper velit a libero feugiat feugiat. Morbi ullamcorper velit eros, scelerisque sagittis massa maximus ac. Ut dictum nibh ut lacus vulputate tempus. Nullam augue tortor, viverra quis molestie a, finibus a nibh.`, \n        null,\n        [\"e2cdad6d-ccba-464d-bbcc-88dd4c5d4293\", \"e2cdad1d-ccba-464d-bbcc-88dd4c5d4293\", \"e2cdad3d-ccba-464d-bbcc-88dd4c5d4293\"],\n        false, \n        false\n    ),\n    makePost(\n        \"e2cdad6d-ccba-464d-bbcc-88dd4c5d4293\", \n        makeUser(\"johndoe\", \"John Doe\"), \n        \"2024-12-13\", \n        \"Answer to \\\"Lorem Ipsum\\\"\", \n        `Donec ullamcorper porta ipsum, eu condimentum lectus. Mauris at mi et nunc gravida pulvinar eu ac turpis. Praesent quis viverra sem. Nulla vel velit vestibulum, consectetur dolor sit amet, accumsan metus. Aenean efficitur lacus a lacus condimentum, nec pellentesque purus fermentum. Morbi aliquam accumsan urna, vel hendrerit neque volutpat ac. In hac habitasse platea dictumst. Fusce elementum enim at nisl mattis luctus. `, \n        \"9165c789-bb94-414a-9666-2bf15f31bece\",\n        [],\n        true, \n        false\n    ),\n    makePost(\n        \"e2cdad1d-ccba-464d-bbcc-88dd4c5d4293\", \n        makeUser(\"johndoe\", \"John Doe\"), \n        \"2024-12-13\", \n        \"Answer to \\\"Lorem Ipsum\\\"\", \n        `Donec ullamcorper porta ipsum, eu condimentum lectus. Mauris at mi et nunc gravida pulvinar eu ac turpis. Praesent quis viverra sem. Nulla vel velit vestibulum, consectetur dolor sit amet, accumsan metus. Aenean efficitur lacus a lacus condimentum, nec pellentesque purus fermentum. Morbi aliquam accumsan urna, vel hendrerit neque volutpat ac. In hac habitasse platea dictumst. Fusce elementum enim at nisl mattis luctus. `, \n        \"9165c789-bb94-414a-9666-2bf15f31bece\",\n        [],\n        false, \n        true\n    ),\n    makePost(\n        \"e2cdad3d-ccba-464d-bbcc-88dd4c5d4293\", \n        makeUser(\"johndoe\", \"John Doe\"), \n        \"2024-12-13\", \n        \"Answer to \\\"Lorem Ipsum\\\"\", \n        `Donec ullamcorper porta ipsum, eu condimentum lectus. Mauris at mi et nunc gravida pulvinar eu ac turpis. Praesent quis viverra sem. Nulla vel velit vestibulum, consectetur dolor sit amet, accumsan metus. Aenean efficitur lacus a lacus condimentum, nec pellentesque purus fermentum. Morbi aliquam accumsan urna, vel hendrerit neque volutpat ac. In hac habitasse platea dictumst. Fusce elementum enim at nisl mattis luctus. `, \n        \"9165c789-bb94-414a-9666-2bf15f31bece\",\n        [],\n        true, \n        false\n    )\n];\n\n\nexport const getPostById = (id) => {\n    return posts.find(post => post.id === id)\n}\n\nexport const setLikeOnPost = (id, value) => {\n    getPostById(id).liked = value\n};\n\nexport const setDeletedOnPost = (id) => {\n    getPostById(id).isDeleted = true;\n}\n\nexport const createPost = (author, title, content, answerTo) => {\n    const id = uuidv4() \n    posts.push(makePost(\n        id, author, new Date().toISOString(), title, content, answerTo, [], false, false\n    ));\n    const answered = posts.find(post => post.id === answerTo);\n    if (answered !== undefined) {\n        answered.answeredFrom.push(id)\n    }\n};\n\nexport const getPostsByAuthorLogin = (login) => {\n    return posts.filter(post => post.author.login === login);\n}","import React, { useContext, useState } from 'react';\nimport { AuthContext, isAuthorized } from '../service/user';\nimport { Link } from 'react-router-dom';\nimport { setLikeOnPost, setDeletedOnPost } from '../service/posts';\n\nconst PostCard = ({id, author, creationDate, title, content, answerTo, answeredFrom, liked, isDeleted}) => {\n    const authContext = useContext(AuthContext);\n    const { user, _ } = authContext;\n\n    const [state, setState] = useState({like: liked, isDeleted: isDeleted });\n    const setLike = () => {\n        const value = { like: !(state.like), isDeleted: state.isDeleted};\n        setLikeOnPost(id, value.like);\n        setState(value)\n    };\n    const setDeleted = () => {\n        if (window.confirm(\"Вы уверены, что хотите удалить пост?\")) {\n            const value = { like: state.like, isDeleted: true };\n            setDeletedOnPost(id);\n            setState(value);\n        }\n    }\n\n    const metaBlock =(\n        <div className=\"container-fluid hor\">\n            <h6 className=\"font-weight-light row-links\">{creationDate}</h6>\n            <Link to={`/post/${id}`} className=\"btn btn-small font-weight-light post-link\">{id}</Link>\n            <Link to={`/${author.login}`} className=\"btn btn-link btn-sm\">\n                @{author.name} {(() => {if(isAuthorized(authContext) && author.login === user.login){return\"(me)\";}else{return;}})()}\n            </Link>\n        </div>\n    );\n    \n    const answerToBlock = (()=>{if(answerTo !== null)\n        return <Link to={`/post/${answerTo}`} className=\"btn btn-small font-weight-light post-link\" >&lt;= {answerTo}</Link>;\n    })();\n\n    const answeredFromBlock = \n        <div>\n            {answeredFrom.map(answer => {\n                return <Link to={`/post/${answer}`} className=\"btn btn-sm font-weight-light post-link\">=&gt; {answer}</Link>;\n            })}\n        </div>;\n\n    const likeButtonComponent = (()=>{\n        if(state.like===true){\n            return <button className=\"btn btn-liked\" onClick={setLike} >♥</button>\n        } else {\n            return <button className=\"btn btn-light\" onClick={setLike}>♥</button>;\n        }\n    })();\n\n    const deleteButtonComponent = (()=>{if(isAuthorized(authContext) && author.login === user.login) {\n        return <button type=\"button\" className=\"btn btn-outline-danger\" onClick={setDeleted}>🗑️</button>;\n    }})();\n\n    const contentBlock = (()=>{if(state.isDeleted === false) {\n            return <React.Fragment>\n                        <h5 className=\"card-title\">{title}</h5>\n                        <p className=\"card-text\">{content}</p>\n                        <div className=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n                            {likeButtonComponent}\n                            <Link to={`/post/new?answerTo=${id}`} type=\"button\" className=\"btn btn-light\">↪️</Link>\n                            {deleteButtonComponent}\n                        </div>\n                    </React.Fragment>\n        } else {\n            return <h5 className=\"card-title\">Пост был удален.</h5>\n    }})();\n\n    return (\n        <div className=\"card w-50 post-card\">\n            <div className=\"card-body\">\n                {metaBlock}\n                {answerToBlock}\n                {answeredFromBlock}\n                {contentBlock}\n            </div>\n        </div>\n    )\n};\n\nexport default PostCard;","import React, { useContext } from 'react';\nimport {\n    AuthContext,\n    isAuthorized, \n} from \"../service/user\";\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    const authContext = useContext(AuthContext);\n    const { user, setUser } = authContext;\n\n    const logout = () => {\n        console.log(\"jopa\");\n        setUser(null);\n    }\n\n    const postButton = (() => {\n        if (isAuthorized(authContext)) {\n            return <Link to={\"/post/new\"} className=\"btn btn-primary my-2 my-lg-0\">Написать пост</Link>\n        } else {\n            return <Link to={\"/login\"} className=\"btn btn-primary my-2 my-lg-0\">Написать пост (Авторизация)</Link>\n        }\n    })()\n\n    const profileDropdown = (() => {  \n        if (isAuthorized(authContext)) {\n            return (\n                <React.Fragment>\n                    <Link to={`/${user.login}`} className=\"btn btn-link\">{user.name}</Link>\n                    <button className=\"btn btn-outline-danger\" onClick={logout}>Выйти</button>\n                </React.Fragment>\n            )\n        } else {\n            return <Link to={\"/login\"} className=\"btn btn-primary\" href=\"/login\">Авторизоваться</Link>\n        }\n    })()\n\n    return (\n        <nav className=\"navbar fixed-top navbar-self navbar-expand-lg navbar-dark bg-dark\">\n            <Link to={\"/feed\"} className=\"navbar-brand\">Posting app</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    {profileDropdown}\n                </ul>\n            </div>\n            {postButton} \n        </nav>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport PostCard from \"./PostCard\";\nimport { posts } from \"../service/posts\";\nimport Header from './Header';\n\nconst Feed = () => {\n    return (\n        <React.Fragment>\n            <Header/>\n            <main className=\"container\">\n                {posts.map(post => {\n                    return <PostCard key={post.id}\n                        id={post.id}\n                        author={post.author}\n                        creationDate={post.creationDate}\n                        title={post.title}\n                        content={post.content}\n                        answerTo={post.answerTo}\n                        answeredFrom={post.answeredFrom}\n                        liked={post.liked}\n                        isDeleted={post.isDeleted}\n                    />;\n                })}\n            </main>\n        </React.Fragment>\n    );\n};\n\nexport default Feed;","import React from 'react';\nimport PostCard from './PostCard';\nimport { getPostById } from '../service/posts';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\n\nconst Post = () => {\n    const { id } = useParams();\n    const post = getPostById(id);\n    return (\n        <React.Fragment>\n            <Header/>\n            <main className='container'>\n                <PostCard\n                    id={post.id}\n                    author={post.author}\n                    creationDate={post.creationDate}\n                    title={post.title}\n                    content={post.content}\n                    answerTo={post.answerTo}\n                    answeredFrom={post.answeredFrom}\n                    liked={post.liked}\n                    isDeleted={post.isDeleted}\n                />\n            </main>            \n        </React.Fragment>\n\n    )\n};\n\nexport default Post;","import React, { Fragment, useContext } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport Header from './Header';\nimport { AuthContext, getUserProfile, isAuthorized } from '../service/user';\nimport { getPostsByAuthorLogin } from '../service/posts';\nimport PostCard from './PostCard';\n\nconst UserProfile = () => {\n    const authContext = useContext(AuthContext);\n    const { user, _ } = authContext;\n\n    const { login } = useParams();\n    const userProfile = getUserProfile(login);\n    if (userProfile === undefined) {\n        return <Navigate to={\"/feed\"}/>\n    }\n    const userPosts = getPostsByAuthorLogin(login);\n\n    const meText = (()=>{\n        if(isAuthorized() && login === user.login) return \"(me)\";\n    })();\n    return (\n        <Fragment>\n            <Header/>\n            <main className=\"container\">\n                <div className=\"card w-50 post-card\">\n                    <div className=\"card-body\">\n                        <div className=\"hor\">\n                            <h5 className=\"card-title\">{userProfile.name} {meText}&emsp;&emsp;</h5>\n                            <span className='font-weight-light'>@{userProfile.login}</span>\n                        </div>\n                    </div>\n                </div>\n                {userPosts.map(post => <PostCard key={post.id}\n                    id={post.id}\n                    author={post.author}\n                    creationDate={post.creationDate}\n                    title={post.title}\n                    content={post.content}\n                    answerTo={post.answerTo}\n                    answeredFrom={post.answeredFrom}\n                    liked={post.liked}\n                    isDeleted={post.isDeleted}\n                />)}\n            </main>\n        </Fragment>\n    );\n}\n\nexport default UserProfile;","import React, { useContext } from \"react\";\nimport { AuthContext, isAuthorized } from \"../service/user\";\nimport { Navigate, redirect, useSearchParams, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport { Form } from 'react-router-dom';\nimport { createPost } from \"../service/posts\";\n\n// Ensure that action func will be called only after NewPostForm component call\nlet kostyl = null;\n\nexport const action = async ({ request }) => {\n    const formData = await request.formData()\n    const title = formData.get(\"title\");\n    const content = formData.get(\"text\");\n    const answerTo = formData.get(\"answerTo\");\n    console.log(formData);\n    createPost(kostyl, title, content, answerTo)\n    return redirect(\"/feed\");\n};\n\nconst NewPostForm = () => {\n    const [params, _] = useSearchParams();\n    const authContext = useContext(AuthContext);\n    const { user, setUser } = authContext;\n    kostyl = user;\n\n    if (isAuthorized(authContext)) {\n        let answerTo = null;\n        if (params.get(\"answerTo\") !== null) {\n            answerTo = \n            <div className=\"form-group\">\n                <label>Ответ на: </label>\n                <input name=\"answerTo\" type=\"text\" className=\"form-control\" id=\"answerToId\" placeholder=\"id\" value={params.get(\"answerTo\")} readonly=\"readonly\"/>\n            </div>\n        }\n\n        return (\n            <React.Fragment>\n                <Header/>\n                <main className=\"container\">\n                    <Form className=\"card w-50 post-card\" method=\"post\">\n                        {answerTo}\n                        <div className=\"form-group\">\n                            <h4 htmlFor=\"postTitle\">Новый пост!</h4>\n                            <input name=\"title\" type=\"text\" className=\"form-control\" id=\"postTitle\" placeholder=\"Название поста\" required/>\n                            <div className=\"valid-feedback\">\n                                Looks good!\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea name=\"text\" className=\"form-control\" cols=\"40\" rows=\"5\" id=\"postText\" placeholder=\"Текст поста\"></textarea>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Создать пост</button>\n                    </Form>\n                </main>\n            </React.Fragment>\n        )\n    } else {\n        return <Navigate to=\"/login\" replace={true} />\n    }\n};\n\nexport default NewPostForm;","import React, { useContext } from 'react';\nimport Header from './Header';\nimport { Form, Link, redirect } from 'react-router-dom';\nimport { getUserProfile, AuthContext } from \"./../service/user\"\n\n// Ensure that action func will be called only after NewPostForm component call\nlet kostyl = null;\n\nexport const action = async ({ request }) => {\n    const formData = await request.formData()\n    const login = formData.get(\"login\");\n    const password = formData.get(\"password\");\n    const profile = getUserProfile(login);\n    kostyl(profile);\n    return redirect(\"/feed\");\n};\n\nconst LoginForm = () => {\n    const { user, setUser } = useContext(AuthContext);\n    kostyl = setUser;\n\n    return (\n        <React.Fragment>\n            <Header/>\n            <main className='container'>    \n                <Form className=\"card w-50 post-card\" method='post'>\n                    <div className=\"form-col align-items-center form-group\">\n                        <div className=\"col-auto\">\n                        <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">Логин</label>\n                        <div className=\"input-group mb-2\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"inputGroupPrepend\">@</span>\n                            </div>\n                            <input name=\"login\" type=\"text\" className=\"form-control\" id=\"loginInput\" placeholder=\"Логин\" required/>\n                        </div>\n                        <div className=\"col-auto\">\n                            <label className=\"sr-only\" htmlFor=\"inlineFormInput\">Пароль</label>\n                            <input password=\"password\" type=\"password\" className=\"form-control mb-2\" id=\"passwordInput\" placeholder=\"Пароль\" required/>\n                        </div>\n                    </div>\n                    <div className=\"col-auto hor\">\n                        <button type=\"submit\" className=\"btn btn-primary mb-2\">Войти</button>\n                    </div>\n                    <Link to={\"/signup\"}>Нет аккаунта? Создайте его!</Link>\n                    </div>\n                </Form>\n            </main>\n        </React.Fragment>\n    );\n};\n\nexport default LoginForm;","import React, { useContext } from 'react';\nimport Header from './Header';\nimport { Form, Link, redirect } from 'react-router-dom';\nimport { getUserProfile, AuthContext, makeUser } from \"../service/user\"\n\n// Ensure that action func will be called only after NewPostForm component call\nlet kostyl = null;\n\nexport const action = async ({ request }) => {\n    const formData = await request.formData()\n    const name = formData.get(\"name\");\n    const login = formData.get(\"login\");\n    const password = formData.get(\"password\");\n    if (login.length < 3) {\n        window.alert(\"Слишком короткий логин\");\n        return null;\n    } else if (!login.match(/[a-z0-9]+/)) {\n        window.alert(\"Логин не удовлетворяет требованиям\");\n        return null;\n    }\n    if (password.length < 8) {\n        window.alert(\"Слишком короткий пароль\");\n        return null;\n    } else if (!password.match(/[a-z0-9]+/)) {\n        window.alert(\"Пароль не удовлетворяет требованиям\");\n        return null;\n    }\n\n    const profile = makeUser(login, name);\n    kostyl(profile);\n\n    return redirect(\"/feed\");\n};\n\nconst SignupForm = () => {\n    const { user, setUser } = useContext(AuthContext);\n    kostyl = setUser;\n\n    return (\n        <React.Fragment>\n            <Header/>\n            <main className='container'>    \n                <Form className=\"card w-50 post-card\" method='post'>\n                    <div className=\"form-col align-items-center form-group\">\n                        <div className=\"col-auto\">\n                            <label className=\"sr-only\" htmlFor=\"inlineFormInput\">Имя</label>\n                            <input name=\"name\" type=\"text\" className=\"form-control mb-2\" id=\"nameInput\" placeholder=\"Имя\" required/>\n                        </div>\n                        <div className=\"col-auto\">\n                            <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">Логин</label>\n                            <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\" id=\"inputGroupPrepend\">@</span>\n                                    </div>\n                                <input name=\"login\" type=\"text\" className=\"form-control\" id=\"loginInput\" placeholder=\"Логин\" required/>\n                            </div>\n                            <small id=\"loginHelpBlock\" className=\"form-text text-muted\">\n                                Только латинские маленькие буквы и цифры (не менее 3 символов)\n                            </small>\n                        </div>\n                        <div className=\"col-auto\">\n                            <label className=\"sr-only\" htmlFor=\"inlineFormInput\">Пароль</label>\n                            <input name=\"password\" type=\"password\" className=\"form-control mb-2\" id=\"passwordInput\" placeholder=\"Пароль\" required/>\n                            <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n                                Только латинские маленькие буквы и цифры (не менее 8 символов) \n                            </small>\n                        </div>\n                        <div className=\"col-auto hor\">\n                            <button type=\"submit\" className=\"btn btn-primary mb-2\">Войти</button>\n                        </div>\n                        <Link to={\"/login\"}>{\"Уже есть аккаунт? Тогда просто войдите! :)\"}</Link>\n                    </div>\n                </Form>\n            </main>\n        </React.Fragment>\n    );\n};\n\nexport default SignupForm;","import Feed from \"./Feed\";\nimport Post from \"./Post\";\nimport {\n  createBrowserRouter,\n  Navigate,\n  RouterProvider,\n} from \"react-router-dom\";\nimport * as React from 'react';\nimport UserProfile from \"./UserProfile\";\nimport NewPostForm from \"./NewPostForm\";\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport { action as newPostAction } from \"./NewPostForm\";\nimport { action as loginAction } from \"./LoginForm\";\nimport { action as signupAction } from \"./SignupForm\";\nimport { AuthContext, setState } from \"../service/user\";\nimport { useState } from \"react\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/feed\",\n    element: <Feed />,\n  },\n  {\n    path: \"/post/:id\",\n    element: <Post />\n  },\n  {\n    path: \"/post/new?\",\n    action: newPostAction,\n    element: <NewPostForm />\n  },\n  {\n    path: \"/login\",\n    action: loginAction,\n    element: <LoginForm />\n  },\n  {\n    path: \"/signup\",\n    action: signupAction,\n    element: <SignupForm />\n  },\n  {\n    path: \"/:login\",\n    element: <UserProfile/>,\n    errorElement: <Navigate to=\"/feed\" replace={true} />\n  },\n  {\n    path: \"/\",\n    element: <Navigate to=\"/feed\" replace={true} />\n  }\n]);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <React.Fragment>\n        <AuthContext.Provider value={{user, setUser}}>\n          <RouterProvider router={router} />\n        </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}